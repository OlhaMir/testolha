import numpy as np
from scipy.integrate import quad

# Визначити функції для інтегралів
def f1(x):
    return 1 / np.sqrt(x + 2.5)

def f2(x):
    return (x**2 + 1) * np.sin(x - 0.5)

def f3(x):
    return 1 / np.sqrt(x**2 + 4)

# 1. Метод прямокутника для інтеграла 1
def rectangle_method(f, a, b, n, method='середній'):
    h = (b - a) / n
    if method == 'лівий':
        x = np.linspace(a, b-h, n)
    elif method == 'правий':
        x = np.linspace(a+h, b, n)
    else:  # середня точка
        x = np.linspace(a + h/2, b - h/2, n)
    return h * np.sum(f(x))

# 2. Правило Сімпсона для інтеграла 2
def simpsons_rule(f, a, b, n):
    if n % 2 == 1:
        raise ValueError("n має бути навіть за правилом Сімпсона.")
    h = (b - a) / n
    x = np.linspace(a, b, n+1)
    y = f(x)
    return h/3 * (y[0] + 2*np.sum(y[2:n:2]) + 4*np.sum(y[1:n:2]) + y[n])

# 3. Трапецієподібний метод для інтеграла 3
def trapezoidal_rule(f, a, b, n):
    h = (b - a) / n
    x = np.linspace(a, b, n+1)
    y = f(x)
    return h * (np.sum(y) - 0.5 * (y[0] + y[-1]))

# Межі інтегрування та n
a1, b1, n1 = 1.6, 2.2, 10
a2, b2, n2 = 1.3, 2.1, 8
a3, b3, n3 = 0.8, 1.8, 20

# Обчисліть інтеграли
integral1_left = rectangle_method(f1, a1, b1, n1, method='лівий')
integral1_right = rectangle_method(f1, a1, b1, n1, method='правий')
integral1_mid = rectangle_method(f1, a1, b1, n1, method='середній')

integral2_simpson = simpsons_rule(f2, a2, b2, n2)
integral3_trapezoidal = trapezoidal_rule(f3, a3, b3, n3)

# Перевірка за допомогою scipy's quad для точності
integral1_actual, _ = quad(f1, a1, b1)
integral2_actual, _ = quad(f2, a2, b2)
integral3_actual, _ = quad(f3, a3, b3)

# Виведення результатів
print(f"1-й інтеграл (метод прямокутника):")
print(f" Лівий: {integral1_left:.4f}, Правий: {integral1_right:.4f}, Середній: {integral1_mid:.4f}")
print(f" Фактичний: {integral1_actual:.4f}")

print(f"\n2-й інтеграл (правило Сімпсона): {integral2_simpson:.4f}")
print(f" Фактичний: {integral2_actual:.4f}")

print(f"\n3-й інтеграл (метод трапецій): {integral3_trapezoidal:.4f}")
print(f" Фактичний: {integral3_actual:.4f}")
